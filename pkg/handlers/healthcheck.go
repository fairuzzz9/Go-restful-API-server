package handlers

import (
	"go-skeleton-rest-app/internal/models"
	"go-skeleton-rest-app/pkg/http/responses"
	"net/http"

	"github.com/labstack/echo/v4"
	"gitlab.com/pos_malaysia/golib/logs"
)

// For application healthcheck purpose. DO NOT MODIFY OR REMOVE THIS!

// HealthCheck godoc
// @Summary Show the status of server.
// @Description get the status of server.
// @Tags root
// @Accept */*
// @Produce json
// @Param P-Request-ID header string false "Request ID generated by client"
// @Success 200 {object} models.StandardJSONResponse
// @Header	200	{string}	string	"P-Request-ID"
// @Router /healthcheck [get]
func HealthCheck(c echo.Context) error {

	//Get client request ID from header if available
	pRequestID := c.Request().Header.Get(responses.ClientRequestID)

	serverTraceID := c.Response().Header().Get(echo.HeaderXRequestID)

	// uncomment these lines to pass context to child function
	//ctx := c.Request().Context()
	//ctx = contextkeys.SetContextValue(ctx, contextkeys.CONTEXT_KEY_SERVER_TRACE_ID, serverTraceID)
	//ctx = contextkeys.SetContextValue(ctx, contextkeys.CONTEXT_KEY_CLIENT_REQUEST_ID, clientRequestID)

	logs.Info().Str("server trace ID", serverTraceID).Str("handler", "HealthCheck").Send()

	var reply models.StandardJSONResponse
	reply.Code = responses.SuccessCode
	reply.Message = "I'm ok"

	c.Response().Header().Set(responses.ClientRequestID, pRequestID)
	c.Response().WriteHeader(http.StatusOK)
	return c.JSON(http.StatusOK, reply)
}
